name: üì£ Build release of QOwnNotes (Next)

on:
  workflow_dispatch:
  push:
    branches:
#      - release
      # For testing also on main branch
      - main
    tags-ignore:
      - '*'
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-including-paths
    paths:
#      - 'src/**'
#      - 'tests/**'
      - '.github/workflows/build-release-next.yml'
  # For testing also on pull requests
#  pull_request:
#    paths:
#      - 'src/**'

defaults:
  run:
    working-directory: src

#--------------------------------------------------------------------------------
# Define application name & version
#--------------------------------------------------------------------------------

env:
  EXECUTABLE: "QOwnNotes"
  APPLICATION: "QOwnNotes"
  UNIXNAME: "QOwnNotes"
  QMAKE_PROJECT: "QOwnNotes.pro"
  PUBLISHER: "Patrizio Bekerle"
  REPO_DIR: "/home/runner/work/QOwnNotes"
  QT_MODULES: ""
  QMAKE: qmake
  CORES: 16

jobs:
  create_release:
    name: 'üóÉÔ∏èÔ∏è Prepare release'
    permissions:
      contents: write  # for actions/create-release to create a release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/checkout@v3
      - name: Set Env
        run: |
          export VERSION=$(cat version.h | sed 's/[^0-9,.]//g')
          #export TAG=v${VERSION}.${GITHUB_RUN_ID}.${GITHUB_RUN_NUMBER}
          export TAG=v${VERSION}
          export RELEASE_TEXT=$(grep -Pzo "## ${VERSION}\n(\n|.)+?\n##" ../CHANGELOG.md | sed '$ d')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "TAG=${TAG}" >> $GITHUB_ENV
          # add multiline release text
          echo "RELEASE_TEXT<<EOF" >> $GITHUB_ENV
          echo "${RELEASE_TEXT}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Printenv
        run: |
          echo "VERSION=${VERSION}"
          echo "TAG=${TAG}"
          echo "RELEASE_TEXT=${RELEASE_TEXT}"
          printenv
#      - name: Create release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ env.TAG }}
#          release_name: Release v${{ env.VERSION }}
#          body: ${{ env.RELEASE_TEXT }}
#          draft: true
#          prerelease: false

#--------------------------------------------------------------------------------
# Workflow jobs (GNU/Linux, macOS & Windows)
#--------------------------------------------------------------------------------

  #
  # Snap build
  #
  build-snap:
    needs: create_release
    runs-on: ubuntu-20.04
#    container:
#      image: ghcr.io/pbek/qownnotes-ubuntu18-dev:latest
#      options: --user root
    env:
      QT_VERSION: 5.15.2
    name: 'üêß Snap Qt 5.15.2'
    steps:

      - name: 'üß∞ Checkout'
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: '‚öôÔ∏è Set Env'
        shell: bash
        run: |
          export VERSION=$(cat version.h | sed 's/[^0-9,.]//g')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: '‚öôÔ∏è Install Snapcraft'
        uses: samuelmeuli/action-snapcraft@v2
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAP_TOKEN_GH }}
        with:
          use_lxd: true
#          snapcraft_token: ${{ secrets.SNAP_TOKEN_GH }}
      - name: '‚öôÔ∏è Cache Qt'
        id: cache-qt
        uses: actions/cache@v3
        with:
          path: ../Qt
          key: ${{runner.os}}-qtcachedir-${{env.QT_VERSION}}
      - name: '‚öôÔ∏è Install Qt'
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{env.QT_VERSION}}
          modules: ${{env.QT_MODULES}}
#          setup-python: false
          cache: ${{steps.cache-qt.outputs.cache-hit}}
      - name: '‚öôÔ∏è Printenv'
        shell: bash
        run: |
          echo "VERSION=${VERSION}"
          printenv

      - name: 'üöß Compile application'
        run: cd .. && sg lxd -c 'snapcraft --use-lxd' && ls

  #    - name: Release Snap for Linux
  #      uses: actions/upload-release-asset@v1
  #      env:
  #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #      with:
  #        upload_url: ${{ needs.create_release.outputs.upload_url }}
  #        asset_path: ./qownnotes_${{ env.VERSION }}_amd64.snap
  #        asset_name: QOwnNotes-amd64.snap
  #        asset_content_type: application/octet-stream

  #    - shell: bash
  #      run: |
  #        snapcraft --version
  #        cd .. && pwd
  #    - name: Deploy Snap
  #      uses: snapcore/action-publish@v1
  #      continue-on-error: true
  #      env:
  #        # `snapcraft export-login --snaps=qownnotes --acls package_access,package_push,package_update,package_release -`, token valid for one year
  #        SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAP_TOKEN_GH }}
  #      with:
  #        snap: /home/runner/work/QOwnNotes/QOwnNotes/qownnotes_${{ env.VERSION }}_amd64.snap
  #        release: stable

      - name: 'üì§ Upload artifact: Snap'
        uses: actions/upload-artifact@v3
        with:
          name: qownnotes_${{ env.VERSION }}_amd64.snap
          path: /home/runner/work/QOwnNotes/QOwnNotes/qownnotes_${{ env.VERSION }}_amd64.snap

      - name: 'üì§ Upload artifact: Snap logs'
        uses: actions/upload-artifact@v3
        with:
          name: snapcraft-logs
          path: /home/runner/.cache/snapcraft/log/snapcraft-*.log

